{"ast":null,"code":"const defaultState = {\n  count: 0\n};\nconst Reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"counter-increment\":\n      {\n        return {\n          ...state,\n          count: state.count + action.payload\n        };\n      }\n    case \"counter-decrement\":\n      {\n        return {\n          ...state,\n          count: state.count - action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = Reducer;\nexport default Reducer;\nvar _c;\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["defaultState","count","Reducer","state","action","type","payload"],"sources":["/Users/maksymm/Desktop/task-3.2/task-3.2/src/reducers/reducers.js"],"sourcesContent":["const defaultState = {\n    count: 0\n  }\n\nconst Reducer = (state = defaultState, action) => {\n    switch (action.type) {\n      case \"counter-increment\": {\n        return {\n          ...state, \n          count: state.count + action.payload\n        }\n      }\n      case \"counter-decrement\": {\n        return {\n          ...state, \n          count: state.count - action.payload\n        }\n      }\n  \n      default: return state;\n    }\n}\n\nexport default Reducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE;AACT,CAAC;AAEH,MAAMC,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACzC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MAAE;QACxB,OAAO;UACL,GAAGF,KAAK;UACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;QAC9B,CAAC;MACH;IACA,KAAK,mBAAmB;MAAE;QACxB,OAAO;UACL,GAAGH,KAAK;UACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAGG,MAAM,CAACE;QAC9B,CAAC;MACH;IAEA;MAAS,OAAOH,KAAK;EAAC;AAE5B,CAAC;AAAA,KAjBKD,OAAO;AAmBb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}