{"ast":null,"code":"import { createStore } from 'redux';\nconst store = createStore(reducer);\nconst defaultState = {\n  count: 0\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"counter-increment\":\n      {\n        return {\n          ...state,\n          count: state.count + action.payload\n        };\n      }\n    case \"counter-decrement\":\n      {\n        return {\n          ...state,\n          count: state.count - action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["createStore","store","reducer","defaultState","count","state","action","type","payload"],"sources":["/Users/maksymm/Desktop/task-3.2/task-3.2/src/reducers/reducers.js"],"sourcesContent":["  \n  import { createStore } from 'redux'; \n  \n  const store = createStore(reducer);\n  const defaultState = {\n      count: 0\n  }\n  \n  const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n      case \"counter-increment\": {\n        return {\n          ...state, \n          count: state.count + action.payload\n        }\n      }\n      case \"counter-decrement\": {\n        return {\n          ...state, \n          count: state.count - action.payload\n        }\n      }\n  \n      default: return state;\n    }\n  }\n\n  export default reducer;"],"mappings":"AACE,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,KAAK,GAAGD,WAAW,CAACE,OAAO,CAAC;AAClC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMF,OAAO,GAAG,YAAkC;EAAA,IAAjCG,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MAAE;QACxB,OAAO;UACL,GAAGF,KAAK;UACRD,KAAK,EAAEC,KAAK,CAACD,KAAK,GAAGE,MAAM,CAACE;QAC9B,CAAC;MACH;IACA,KAAK,mBAAmB;MAAE;QACxB,OAAO;UACL,GAAGH,KAAK;UACRD,KAAK,EAAEC,KAAK,CAACD,KAAK,GAAGE,MAAM,CAACE;QAC9B,CAAC;MACH;IAEA;MAAS,OAAOH,KAAK;EAAC;AAE1B,CAAC;AAED,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}